Envvariable:
  - "TAG_ENVIRONMENT=prod"
  - "TAG_APP_NAME=xxxx"
  - "TAG_AWS_CLI_PROFILE=aws-tag-xxxx"
  - "TAG_ACCOUNT_NUMBER=143391xxxxxx"
  - "TAG_RDS_USERNAME=admin"

Preprocess:
  - "<TAG_CMD>aws ec2 create-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT}.pem --tag-specifications ResourceType=\"key-pair\",Tags=\"[{Key='tag_environment', Value='$TAG_ENVIRONMENT'},{Key='tag_app',Value='$TAG_APP_NAME'}]\" | jq -r -c '.KeyMaterial' > ~/kp-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT}.pem<TAG_DMC><TAG_RT>aws ec2 delete-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT}.pem<TAG_TR>"
  - "<TAG_CMD>mv ~/kp-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT}.pem ~/.ssh/<TAG_DMC>"
  - "<TAG_CMD>chmod 400 ~/.ssh/kp-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT}.pem<TAG_DMC>"
  - "<TAG_CMD>aws ec2 create-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT}.pem --tag-specifications ResourceType=\"key-pair\",Tags=\"[{Key='tag_environment', Value='$TAG_ENVIRONMENT'},{Key='tag_app',Value='$TAG_APP_NAME'}]\" | jq -r -c '.KeyMaterial' > ~/kp-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT}.pem<TAG_DMC><TAG_RT>aws ec2 delete-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT}.pem<TAG_TR>"
  - "<TAG_CMD>mv ~/kp-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT}.pem ~/.ssh/<TAG_DMC>"
  - "<TAG_CMD>chmod 400 ~/.ssh/kp-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT}.pem<TAG_DMC>"
  - "<TAG_CMD>aws ec2 create-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT}.pem --tag-specifications ResourceType=\"key-pair\",Tags=\"[{Key='tag_environment', Value='$TAG_ENVIRONMENT'},{Key='tag_app',Value='$TAG_APP_NAME'}]\" | jq -r -c '.KeyMaterial' > ~/kp-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT}.pem<TAG_DMC><TAG_RT>aws ec2 delete-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT}.pem<TAG_TR>"
  - "<TAG_CMD>mv ~/kp-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT}.pem ~/.ssh/<TAG_DMC>"
  - "<TAG_CMD>chmod 400 ~/.ssh/kp-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT}.pem<TAG_DMC>"
  - "<TAG_CMD>aws ec2 create-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT}.pem --tag-specifications ResourceType=\"key-pair\",Tags=\"[{Key='tag_environment', Value='$TAG_ENVIRONMENT'},{Key='tag_app',Value='$TAG_APP_NAME'}]\" | jq -r -c '.KeyMaterial' > ~/kp-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT}.pem<TAG_DMC><TAG_RT>aws ec2 delete-key-pair --profile ${TAG_AWS_CLI_PROFILE} --key-name kp-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT}.pem<TAG_TR>"
  - "<TAG_CMD>mv ~/kp-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT}.pem ~/.ssh/<TAG_DMC>"
  - "<TAG_CMD>chmod 400 ~/.ssh/kp-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT}.pem<TAG_DMC>"
  - "<TAG_CMD>aws iam create-service-linked-role --profile ${TAG_AWS_CLI_PROFILE} --aws-service-name autoscaling.amazonaws.com<TAG_DMC><TAG_IG>1<TAG_GI>"
  - "<TAG_EXP>TAG_PASS_KMS_ID<TAG_PXE><TAG_CMD>aws kms create-key --profile ${TAG_AWS_CLI_PROFILE} --tags TagKey=environment,TagValue=${TAG_ENVIRONMENT} TagKey=tag_app,TagValue=${TAG_APP_NAME} TagKey=usage,TagValue=ec2-passwd --description \"kms key for encrypt ec2 bastion key\"  | jq -r '.KeyMetadata.\"KeyId\"'<TAG_DMC>"
  - "<TAG_CMD>aws kms create-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_bastion_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --target-key-id ${TAG_PASS_KMS_ID}<TAG_DMC><TAG_RT>aws kms delete-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_bastion_${TAG_APP_NAME}_${TAG_ENVIRONMENT}<TAG_TR>"
  - "<TAG_CMD>aws secretsmanager create-secret --profile ${TAG_AWS_CLI_PROFILE} --name st_tag_ec2_bastion_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --description \"ec2 private key for bastion in ${TAG_APP_NAME}-${TAG_ENVIRONMENT}\" --secret-string file:///home/ec2-user/.ssh/kp-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT}.pem --kms-key-id \"alias/kms-4_ec2_bastion_${TAG_APP_NAME}_${TAG_ENVIRONMENT}\" --tags \"[{\\\"Key\\\":\\\"tag_app\\\",\\\"Value\\\":\\\"$TAG_APP_NAME\\\"},{\\\"Key\\\":\\\"tag_environment\\\",\\\"Value\\\":\\\"$TAG_ENVIRONMENT\\\"},{\\\"Key\\\":\\\"tag_usage\\\",\\\"Value\\\":\\\"env_specific\\\"}]\"<TAG_DMC>"
  - "<TAG_EXP>TAG_PASS_KMS_ID<TAG_PXE><TAG_CMD>aws kms create-key --profile ${TAG_AWS_CLI_PROFILE} --tags TagKey=environment,TagValue=${TAG_ENVIRONMENT} TagKey=tag_app,TagValue=${TAG_APP_NAME} TagKey=usage,TagValue=ec2-passwd --description \"kms key for encrypt ec2 web key\"  | jq -r '.KeyMetadata.\"KeyId\"'<TAG_DMC>"
  - "<TAG_CMD>aws kms create-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_web_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --target-key-id ${TAG_PASS_KMS_ID}<TAG_DMC><TAG_RT>aws kms delete-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_web_${TAG_APP_NAME}_${TAG_ENVIRONMENT}<TAG_TR>"
  - "<TAG_CMD>aws secretsmanager create-secret --profile ${TAG_AWS_CLI_PROFILE} --name st_tag_ec2_web_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --description \"ec2 private key for web in ${TAG_APP_NAME}-${TAG_ENVIRONMENT}\" --secret-string file:///home/ec2-user/.ssh/kp-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT}.pem --kms-key-id \"alias/kms-4_ec2_web_${TAG_APP_NAME}_${TAG_ENVIRONMENT}\" --tags \"[{\\\"Key\\\":\\\"tag_app\\\",\\\"Value\\\":\\\"$TAG_APP_NAME\\\"},{\\\"Key\\\":\\\"tag_environment\\\",\\\"Value\\\":\\\"$TAG_ENVIRONMENT\\\"},{\\\"Key\\\":\\\"tag_usage\\\",\\\"Value\\\":\\\"env_specific\\\"}]\"<TAG_DMC>"
  - "<TAG_EXP>TAG_PASS_KMS_ID<TAG_PXE><TAG_CMD>aws kms create-key --profile ${TAG_AWS_CLI_PROFILE} --tags TagKey=environment,TagValue=${TAG_ENVIRONMENT} TagKey=tag_app,TagValue=${TAG_APP_NAME} TagKey=usage,TagValue=ec2-passwd --description \"kms key for encrypt ec2 app key\"  | jq -r '.KeyMetadata.\"KeyId\"'<TAG_DMC>"
  - "<TAG_CMD>aws kms create-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_app_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --target-key-id ${TAG_PASS_KMS_ID}<TAG_DMC><TAG_RT>aws kms delete-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_app_${TAG_APP_NAME}_${TAG_ENVIRONMENT}<TAG_TR>"
  - "<TAG_CMD>aws secretsmanager create-secret --profile ${TAG_AWS_CLI_PROFILE} --name st_tag_ec2_app_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --description \"ec2 private key for app in ${TAG_APP_NAME}-${TAG_ENVIRONMENT}\" --secret-string file:///home/ec2-user/.ssh/kp-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT}.pem --kms-key-id \"alias/kms-4_ec2_app_${TAG_APP_NAME}_${TAG_ENVIRONMENT}\" --tags \"[{\\\"Key\\\":\\\"tag_app\\\",\\\"Value\\\":\\\"$TAG_APP_NAME\\\"},{\\\"Key\\\":\\\"tag_environment\\\",\\\"Value\\\":\\\"$TAG_ENVIRONMENT\\\"},{\\\"Key\\\":\\\"tag_usage\\\",\\\"Value\\\":\\\"env_specific\\\"}]\"<TAG_DMC>"
  - "<TAG_EXP>TAG_PASS_KMS_ID<TAG_PXE><TAG_CMD>aws kms create-key --profile ${TAG_AWS_CLI_PROFILE} --tags TagKey=environment,TagValue=${TAG_ENVIRONMENT} TagKey=tag_app,TagValue=${TAG_APP_NAME} TagKey=usage,TagValue=ec2-passwd --description \"kms key for encrypt ec2 jenkins key\"  | jq -r '.KeyMetadata.\"KeyId\"'<TAG_DMC>"
  - "<TAG_CMD>aws kms create-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_jenkins_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --target-key-id ${TAG_PASS_KMS_ID}<TAG_DMC><TAG_RT>aws kms delete-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_ec2_jenkins_${TAG_APP_NAME}_${TAG_ENVIRONMENT}<TAG_TR>"
  - "<TAG_CMD>aws secretsmanager create-secret --profile ${TAG_AWS_CLI_PROFILE} --name st_tag_ec2_jenkins_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --description \"ec2 private key for jenkins in ${TAG_APP_NAME}-${TAG_ENVIRONMENT}\" --secret-string file:///home/ec2-user/.ssh/kp-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT}.pem --kms-key-id \"alias/kms-4_ec2_jenkins_${TAG_APP_NAME}_${TAG_ENVIRONMENT}\" --tags \"[{\\\"Key\\\":\\\"tag_app\\\",\\\"Value\\\":\\\"$TAG_APP_NAME\\\"},{\\\"Key\\\":\\\"tag_environment\\\",\\\"Value\\\":\\\"$TAG_ENVIRONMENT\\\"},{\\\"Key\\\":\\\"tag_usage\\\",\\\"Value\\\":\\\"env_specific\\\"}]\"<TAG_DMC>"

terraform:
  - "<TAG_CMD>grep \"${TAG_AWS_CLI_PROFILE}\" ~/.aws/credentials<TAG_DMC>"
  - "<TAG_EXP>TAG_CREDENTIAL_FILEPATH<TAG_PXE><TAG_CMD>ls ~/.aws/credentials<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils<TAG_DW><TAG_IFNOT>cd k8s<TAG_TONFI><TAG_CMD>git clone https://github.gatech.edu/tag/k8s.git<TAG_DMC>"
  - "<TAG_IFNOT>terraform -version<TAG_TONFI><TAG_CMD>git clone https://github.com/tfutils/tfenv.git /home/ec2-user/.tfenv && sudo ln -s /home/ec2-user/.tfenv/bin/* /usr/local/bin && /usr/local/bin/tfenv install latest && /usr/local/bin/tfenv install 0.11.6 && tfenv use latest<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/common_objects<TAG_DW><TAG_CMD>sed 's/<TAG_ENVIRONMENT>/'$TAG_ENVIRONMENT'/g; s/<TAG_ACCOUNT_NUMBER>/'$TAG_ACCOUNT_NUMBER'/g; s/<TAG_APP_NAME>/'$TAG_APP_NAME'/g; s/<TAG_CREDENTIAL_FILEPATH>/'$TAG_CREDENTIAL_FILEPATH'/g'  variables.template >  variables.tf<TAG_DMC>"
  - "<TAG_IFNOT>grep \"successfully initialized\" tag_terraform_init.status<TAG_TONFI><TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/common_objects<TAG_DW><TAG_CMD>terraform init > tag_terraform_init.status<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/common_objects<TAG_DW><TAG_CMD>terraform plan -out=tag-tf-common-object-plan<TAG_DMC><TAG_RT>terraform apply tag-tf-common-object-plan<TAG_TR>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/common_objects<TAG_DW><TAG_CMD>terraform apply tag-tf-common-object-plan<TAG_DMC>"
  - "<TAG_EXP>TAG_AMI_APP<TAG_PXE><TAG_CMD>aws ec2 describe-images --profile ${TAG_AWS_CLI_PROFILE} --owners 374685141625 --filters \"Name=name,Values=ami-dev-gttracs*\" --query \"reverse(sort_by(Images, &CreationDate))[0].[ImageId]\" --output text<TAG_DMC>"
  - "<TAG_EXP>TAG_AMI_WEB<TAG_PXE><TAG_CMD>aws ec2 describe-images --profile ${TAG_AWS_CLI_PROFILE} --owners 374685141625 --filters \"Name=name,Values=ami-aws-tag-web-prod\" --query \"reverse(sort_by(Images, &CreationDate))[0].[ImageId]\" --output text<TAG_DMC>"
  - "<TAG_EXP>TAG_AMI_JENKINS<TAG_PXE><TAG_CMD>aws ec2 describe-images --profile ${TAG_AWS_CLI_PROFILE} --owners 374685141625 --filters \"Name=name,Values=ami-aws-tag-jenkins-prod\" --query \"reverse(sort_by(Images, &CreationDate))[0].[ImageId]\" --output text<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/compute<TAG_DW><TAG_CMD>sed 's/<TAG_ENVIRONMENT>/'$TAG_ENVIRONMENT'/g; s/<TAG_ACCOUNT_NUMBER>/'$TAG_ACCOUNT_NUMBER'/g; s/<TAG_APP_NAME>/'$TAG_APP_NAME'/g; s/<TAG_AMI_JENKINS>/'$TAG_AMI_JENKINS'/g; s/<TAG_AMI_WEB>/'$TAG_AMI_WEB'/g; s/<TAG_AMI_APP>/'$TAG_AMI_APP'/g; s/<TAG_CREDENTIAL_FILEPATH>/'$TAG_CREDENTIAL_FILEPATH'/g'  variables.template >  variables.tf<TAG_DMC>"
  - "<TAG_IFNOT>grep \"successfully initialized\" tag_terraform_init.status<TAG_TONFI><TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/compute<TAG_DW><TAG_CMD>terraform init > tag_terraform_init.status<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/compute<TAG_DW><TAG_CMD>terraform plan -out=tag-tf-compute-object-plan<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/compute<TAG_DW><TAG_CMD>terraform apply tag-tf-compute-object-plan<TAG_DMC><TAG_RT>terraform apply tag-tf-compute-object-plan<TAG_TR>"
  - "<TAG_EXP>TAG_PASS_KMS_ID<TAG_PXE><TAG_CMD>aws kms create-key --profile ${TAG_AWS_CLI_PROFILE} --tags TagKey=environment,TagValue=${TAG_ENVIRONMENT} TagKey=tag_app,TagValue=${TAG_APP_NAME} TagKey=usage,TagValue=rds-passwd --description \"kms key for encrypt rds passwd in ${TAG_ENVIRONMENT} environment\"  | jq -r '.KeyMetadata.\"KeyId\"'<TAG_DMC>"
  - "<TAG_CMD>aws kms create-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_rds_passwd_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --target-key-id ${TAG_PASS_KMS_ID}<TAG_DMC><TAG_RT>aws kms delete-alias --profile ${TAG_AWS_CLI_PROFILE} --alias-name alias/kms-4_rds_passwd_${TAG_APP_NAME}_${TAG_ENVIRONMENT}<TAG_TR>"
  - "<TAG_EXP>TAG_RDS_PASSWD<TAG_PXE><TAG_RSTR>tag;12<TAG_RTSR>"
  - "<TAG_CMD>aws secretsmanager create-secret --profile ${TAG_AWS_CLI_PROFILE} --name st_tag_rds_passwd_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --description \"rds passwd for app in ${TAG_APP_NAME}-${TAG_ENVIRONMENT}\" --secret-string ${TAG_RDS_PASSWD} --kms-key-id \"alias/kms-4_rds_passwd_${TAG_APP_NAME}_${TAG_ENVIRONMENT}\" --tags \"[{\\\"Key\\\":\\\"tag_app\\\",\\\"Value\\\":\\\"$TAG_APP_NAME\\\"},{\\\"Key\\\":\\\"tag_environment\\\",\\\"Value\\\":\\\"$TAG_ENVIRONMENT\\\"},{\\\"Key\\\":\\\"tag_usage\\\",\\\"Value\\\":\\\"env_specific\\\"}]\"<TAG_DMC>"
  - "<TAG_EXP>TAG_RDS_PASSWORD<TAG_PXE><TAG_CMD>aws secretsmanager get-secret-value --profile ${TAG_AWS_CLI_PROFILE} --secret-id st_tag_rds_passwd_${TAG_APP_NAME}_${TAG_ENVIRONMENT} --version-stage AWSCURRENT | jq -r -c '.SecretString'<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/store<TAG_DW><TAG_CMD>sed 's/<TAG_ENVIRONMENT>/'$TAG_ENVIRONMENT'/g; s/<TAG_ACCOUNT_NUMBER>/'$TAG_ACCOUNT_NUMBER'/g; s/<TAG_APP_NAME>/'$TAG_APP_NAME'/g; s/<TAG_RDS_USERNAME>/'$TAG_RDS_USERNAME'/g; s/<TAG_RDS_PASSWORD>/'$TAG_RDS_PASSWORD'/g; s/<TAG_CREDENTIAL_FILEPATH>/'$TAG_CREDENTIAL_FILEPATH'/g'  variables.template >  variables.tf<TAG_DMC>"
  - "<TAG_IFNOT>grep \"successfully initialized\" tag_terraform_init.status<TAG_TONFI><TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/store<TAG_DW><TAG_CMD>terraform init > tag_terraform_init.status<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/store<TAG_DW><TAG_CMD>terraform plan -out=tag-tf-store-object-plan<TAG_DMC>"
  - "<TAG_WD>/home/ec2-user/go/src/Con_Utils/k8s/apps/gttracs/store<TAG_DW><TAG_CMD>terraform apply tag-tf-store-object-plan<TAG_DMC><TAG_RT>terraform apply tag-tf-store-object-plan<TAG_TR>"

postprocessing:
  - "<TAG_CMD>aws autoscaling update-auto-scaling-group --profile ${TAG_AWS_CLI_PROFILE} --auto-scaling-group-name $(aws autoscaling describe-auto-scaling-groups --profile ${TAG_AWS_CLI_PROFILE} | jq -r -c --arg asg_name asg-tag-${TAG_APP_NAME}-bastion-${TAG_ENVIRONMENT} '.AutoScalingGroups | map(select(.AutoScalingGroupName | contains ($asg_name))) | .[].AutoScalingGroupName') --launch-template LaunchTemplateId=$(aws ec2 describe-launch-templates --profile ${TAG_AWS_CLI_PROFILE} --query 'LaunchTemplates[*].LaunchTemplateId' --filters \"Name=launch-template-name,Values=lt-tag-bastion-${TAG_ENVIRONMENT}\" --output text),Version='$Default'<TAG_DMC>"
  - "<TAG_CMD>aws autoscaling update-auto-scaling-group --profile ${TAG_AWS_CLI_PROFILE} --auto-scaling-group-name $(aws autoscaling describe-auto-scaling-groups --profile ${TAG_AWS_CLI_PROFILE} | jq -r -c --arg asg_name asg-tag-${TAG_APP_NAME}-app-${TAG_ENVIRONMENT} '.AutoScalingGroups | map(select(.AutoScalingGroupName | contains ($asg_name))) | .[].AutoScalingGroupName') --launch-template LaunchTemplateId=$(aws ec2 describe-launch-templates --profile ${TAG_AWS_CLI_PROFILE} --query 'LaunchTemplates[*].LaunchTemplateId' --filters \"Name=launch-template-name,Values=lt-tag-app-${TAG_ENVIRONMENT}\" --output text),Version='$Default'<TAG_DMC>"
  - "<TAG_CMD>aws autoscaling update-auto-scaling-group --profile ${TAG_AWS_CLI_PROFILE} --auto-scaling-group-name $(aws autoscaling describe-auto-scaling-groups --profile ${TAG_AWS_CLI_PROFILE} | jq -r -c --arg asg_name asg-tag-${TAG_APP_NAME}-web-${TAG_ENVIRONMENT} '.AutoScalingGroups | map(select(.AutoScalingGroupName | contains ($asg_name))) | .[].AutoScalingGroupName') --launch-template LaunchTemplateId=$(aws ec2 describe-launch-templates --profile ${TAG_AWS_CLI_PROFILE} --query 'LaunchTemplates[*].LaunchTemplateId' --filters \"Name=launch-template-name,Values=lt-tag-web-${TAG_ENVIRONMENT}\" --output text),Version='$Default'<TAG_DMC>"
  - "<TAG_CMD>aws autoscaling update-auto-scaling-group --profile ${TAG_AWS_CLI_PROFILE} --auto-scaling-group-name $(aws autoscaling describe-auto-scaling-groups --profile ${TAG_AWS_CLI_PROFILE} | jq -r -c --arg asg_name asg-tag-${TAG_APP_NAME}-jenkins-${TAG_ENVIRONMENT} '.AutoScalingGroups | map(select(.AutoScalingGroupName | contains ($asg_name))) | .[].AutoScalingGroupName') --launch-template LaunchTemplateId=$(aws ec2 describe-launch-templates --profile ${TAG_AWS_CLI_PROFILE} --query 'LaunchTemplates[*].LaunchTemplateId' --filters \"Name=launch-template-name,Values=lt-tag-jenkins-${TAG_ENVIRONMENT}\" --output text),Version='$Default'<TAG_DMC>"
